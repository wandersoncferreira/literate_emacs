;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(ivy-history file-name-history minibuffer-history counsel-M-x-history))
(setq ivy-history '(#("epg-gp" 0 6 (ivy-index 4)) #("insert-di" 0 9 (ivy-index 0)) #("mac-co" 0 6 (ivy-index 1)) #("mouse-wheel-sc" 0 14 (ivy-index 0)) #("mac-mou" 0 7 (ivy-index 0)) #("ls-lisp-use" 0 11 (ivy-index 0))))
(setq file-name-history '(#("/Users/wandersonferreira/.emacs.d/" 0 34 (ivy-index 0))))
(setq minibuffer-history '("wandersoncferreira"))
(setq counsel-M-x-history '(#("^" 0 1 (ivy-index 0))))
(setq kill-ring '(#("control-modifier" 0 8 (fontified t) 8 16 (fontified t)) #("  (setq ))
" 0 2 (fontified t) 2 3 (fontified t) 3 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil)) "doc" #("doc" 0 3 (fontified t face font-lock-comment-face)) "(defun lgm/describe-func ()
  \"Jump to Eliso functions.\"
  (interactive)
  (describe-function (function-called-at-point)))

(defun lgm/jump-to-elisp-func-def ()
  \"Jump to Elisp definitions.\"
  (interactive)
  (find-function (function-called-at-point)))

(global-set-key (kbd \"C-h C-j\") 'lgm/jump-to-elisp-func-def)
(global-set-key (kbd \"C-h C-f\") 'lgm/describe-func)

;; smart `beginning-of-line'
(defadvice move-beginning-of-line (around smarter-bol activate)
  \"Move to requested line if needed.\"
  (let ((arg (or (ad-get-arg 0) 1)))
    (when (/= arg 1)
      (forward-line (1- arg))))
  ;; Move to indentation on first call, then to actual BOL on second.
  (let ((pos (point)))
    (back-to-indentation)
    (when (= pos (point))
      ad-do-it)))" #("map flyspell-mode" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t) 4 13 (fontified t) 13 17 (fontified t)) #("map" 0 3 (fontified t)) "(add-hook 'prog-mode-hook 'flyspell-prog-mode)
(add-hook 'text-mode-hook 'flyspell-mode)" "(setq flyspell-issue-welcome-flag nil)
(setq-default ispell-list-command \"list\")
(if isOSX
    (setq-default ispell-program-name \"/usr/local/bin/aspell\")
  (setq-default ispell-program-name \"/usr/bin/aspell\"))
" #("  (setq flyspell-issue))
" 0 2 (fontified t) 2 3 (fontified t) 3 7 (fontified t face font-lock-keyword-face) 7 22 (fontified t) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil)) #("littering-expand-var-file-name " 0 10 (fontified t) 10 17 (fontified t) 17 21 (fontified t) 21 26 (fontified t) 26 31 (fontified t)) ";; savehistn
 (setq savehist-file (no-littering-expand-var-file-name \"savehist.log\"))
 (savehist-mode 1)
 (setq history-length t)
 (setq savehist-save-minibuffer-history 1)
 (setq savehist-additional-variables
	  '(kill-ring
	    search-ring
	    regexp-search-ring))" #("littering-expand-var-file-name " 0 10 (fontified t) 10 17 (fontified t) 17 21 (fontified t) 21 26 (fontified t) 26 31 (fontified t)) ";; saveplace
(if (version< emacs-version \"25.1\")
    (progn
      (require 'saveplace)
      (setq-default save-place t))
  (save-place-mode t)
  (setq save-place-file (no-littering-expand-var-file-name \"saveplace.log\")))"))
(setq search-ring '("init"))
(setq regexp-search-ring 'nil)
