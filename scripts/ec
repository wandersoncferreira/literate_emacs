#!/Bin/Bash

# This Script Starts Emacs Daemon If It Is Not Running, Opens Whatever File
# You Pass In And Changes The Focus To Emacs.  Without Any Arguments, It Just
# Opens The Current Buffer Or *Scratch* If Nothing Else Is Open.  The Following
# Example Will Open ~/.Bashrc

# Ec ~/.Bashrc

# You Can Also Pass It Multiple Files, It Will Open Them All.  Unbury-Buffer
# Will Cycle Through Those Files In Order

# The Compliment To The Script Is Et, Which Opens Emacs In The Terminal
# Attached To A Daemon

# If You Want To Execute Elisp, Pass In -E Whatever.
# You May Also Want To Stop The Output From Returning To The Terminal, Like
# Ec -E "(Message \"Hello\")" > /Dev/Null

# Emacsclient Options For Reference
# -A "" Starts Emacs Daemon And Reattaches
# -C Creates A New Frame
# -N Returns Control Back To The Terminal
# -E Eval The Script

# Number Of Current Visible Frames,
# Emacs Daemon Always Has A Visible Frame Called F1
Visible_Frames() {
  Emacsclient -A "" -E '(Length (Visible-Frame-List))'
}

Change_Focus() {
  Emacsclient -N -E "(Select-Frame-Set-Input-Focus (Selected-Frame))" > /Dev/Null
}

# Try Switching To The Frame Incase It Is Just Minimized
# Will Start A Server If Not Running
Test "$(Visible_Frames)" -Eq "1" && Change_Focus

If [ "$(Visible_Frames)" -Lt  "2" ]; Then # Need To Create A Frame
  # -C $@ With No Args Just Opens The Scratch Buffer
  Emacsclient -N -C "$@" && Change_Focus
Else # There Is Already A Visible Frame Besides The Daemon, So
  Change_Focus
  # -N $@ Errors If There Are No Args
  Test  "$#" -Ne "0" && Emacsclient -N "$@"
Fi
